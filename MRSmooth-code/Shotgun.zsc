Class MRIntWeaps_Shotgun: Shotgun Replaces Shotgun
{
	Default{
		Weapon.SlotNumber 3;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;
	Const Lay2 = PSP_FLASH+1;
	
	int BobState, IdleDelay;
		
	Float Recoil;
	Override Void DoEffect()
	{
		if(Recoil>0){Recoil-=.25;Owner.A_SetPitch(Owner.Pitch+.25*MRIntW_RecoilAmount);}
		
		For(int i=0;i<Casings.Size();i++){
			if(Casings[i])DoCasing(i);
		}
	}
	
	States{
		Select:
			TNT1 A 0 A_Overlay(Lay1, "GunRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "GunLower");
		Lower:
			#### A 1 A_Lower();
			Loop;
		
		GunRaise:
			TNT1 AAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, 54, 89);
				A_OverlayScale(Lay1, 1.2, 1.2);
				A_OverlayRotate(Lay1, -10.5);
			}
			SH1G A 1{if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH2GA0");}
			#### AAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -7, -9, WOF_ADD);
				A_OverlayScale(Lay1, -.02, -.02, WOF_ADD);
				A_OverlayRotate(Lay1, 1.2, WOF_ADD);
			}
			#### AA 1 {
				A_OverlayOffset(Lay1, -4, 4, WOF_ADD);
				A_OverlayScale(Lay1, -.02, -.02, WOF_ADD);
				A_OverlayRotate(Lay1, 1.4, WOF_ADD);
			}
			#### A 1 {
				A_OverlayOffset(Lay1, 0, 32, WOF_INTERPOLATE);
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			#### A 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayRotate(Lay1, 0);
			}
		GunWait:
			SH1G A 1 A_IdleAnimation(Lay1);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			#### # 0 A_JumpIf(invoker.IdleDelay>35 && abs(invoker.BobState)<2, "GunIdle1");
			Loop;
		GunLower:
			SH1G C 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON, false);
				A_OverlayOffset(Lay1, 10, 10+Player.GetPSprite(PSP_WEAPON).Y);
				A_OverlayScale(lay1, .8, .8);
				A_OverlayPivot(Lay1, .5, 0);
			}
			#### ## 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -6, -5, WOF_ADD);
				A_OverlayRotate(Lay1, .2, WOF_ADD);
			}
			#### ############ 1 {
				A_OverlayOffset(Lay1, -6, 9, WOF_ADD);
				A_OverlayRotate(Lay1, 1.5, WOF_ADD);
				A_OverlayScale(Lay1, .05, .05, WOF_ADD);
			}
			Stop;
		GunIdle1:
			#### # 0 {
				A_OverlayPivot(Lay1, .5, 1);
				invoker.BobState = 0;
				invoker.IdleDelay = CRandom(-10, -3)*70;
			}
			#### # 0 A_JumpIf(CRandom(0, 255)<100, "GunIdle2");
			#### AAAA 1 {A_Overlayoffset(Lay1, -.15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.1, .05, WOF_ADD);A_OverlayRotate(Lay1, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .1, .025, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .025, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.05, -.1, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 2 {
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_Overlayoffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_SetTics(CRandom(1,2));
			}
			#### # 0 A_JumpIf(CRandom(0, 10)<4, "GunIdle2");
			#### # 0 A_JumpIf(CRandom(0, 40)==1, "GunIdle1");
			Goto GunWait;
		GunIdle2:
			#### A 1 {A_Overlayoffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .05, -.1, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.025, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.1, .025, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_Overlayoffset(Lay1, -.1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .1, .05, WOF_ADD);A_OverlayRotate(Lay1, .1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAAA 1 {A_Overlayoffset(Lay1, .15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			Goto GunWait;
		
		Ready:
			TNT1 A 1 A_WeaponReady();
			Loop;
		Fire:
			TNT1 A 3 {A_Overlay(Lay1, "GunFire");if(MRIntW_InstantFire)A_SetTics(0);}
			TNT1 A 7 {
				A_FireShotgun();
				A_Overlay(Lay2, "GunFlash");
				if(MRIntW_Recoil){invoker.Recoil+=3;A_SetPitch(Pitch-3*MRIntW_RecoilAmount);}//Recoil
			}
			TNT1 BC 5;
			TNT1 D 4;
			TNT1 CB 5;
			TNT1 A 3;
			TNT1 A 3 {if(!MRIntW_InstantFire)A_SetTics(0);else if(Player.GetPSprite(Lay1).Tics<3)A_WeaponReady(WRF_NOFIRE);}
			TNT1 A 7 A_ReFire();
			Goto Ready;
			
		GunFire:
			SH1G # 0 {A_OverlayPivot(Lay1, .5, .5);if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH2GA0");}
			#### # 0 A_JumpIf(MRIntW_InstantFire, 3);
			#### A 2;
			#### A 1 A_OverlayOffset(Lay1, 0, 1, WOF_ADD);
			#### A 1;//Shot
			#### A 1 {//Recoil
				Float Scal = CFRandom(.2, .3);
				Vector2 Ofst = (-CFRandom(2, 3), CFRandom(8, 15));
				Float Rotate = CRandomPick(0, CFRandom(.9, 1.5));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
			}
			#### A 1;
			#### AAA 1{//Recover
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .5;
				Player.GetPSprite(Lay1).Y *= .5;
				Player.GetPSprite(Lay1).Rotation *= .5;
			}
			#### A 1{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			#### C 1;//Raise
			#### CC 1 A_OverlayOffset(Lay1, -4, -6, WOF_ADD);
			#### DEFF 1 A_OverlayOffset(Lay1, -15, -7, WOF_ADD);
			#### F 1 A_OverlayOffset(Lay1, -3, -2, WOF_ADD);
			#### F 1 A_OverlayOffset(Lay1, 3, 8, WOF_ADD);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
			#### # 0 {
				if(!MRIntW_Casings)Return;
				int index;
				For(index=0;index<invoker.Casings.Size()+1;index++){
					if(index>=invoker.Casings.Size()){index=-1;Break;}
					if(!invoker.Casings[index]){invoker.Casings[index] = true;Break;}
				}
								
				if(index<invoker.Casings.Size() && index>-1){
					A_Overlay(CaseStart+index, "CasingLay");
					invoker.CasingDir[index] = CFRandom(-.5, 1);
				}
			}
			#### HH 1 {
				A_OverlayOffset(Lay1, 5, 17, WOF_ADD);//Pump
				
				if(MRIntW_Smoke){
					int index;
					For(index=0;index<invoker.Smokes.Size()+1;index++){
						if(index>=invoker.Smokes.Size()){index=-1;Break;}
						if(!invoker.Smokes[index])Break;
					}
					
					if(index<invoker.Smokes.Size() && index>-1){
						MRIntWeaps_SmokeContainer a = New('MRIntWeaps_SmokeContainer');
						a.Vel = (CFRandom(0, 2), -CFRandom(1, 1.2), CFRandom(.5, 1));
						invoker.Smokes[index] = a;
						
						Vector2 Bob = PlayerPawn(Self).BobWeapon(35);
						Bob.Y = Clamp(Bob.Y, 0, 50);
						
						A_Overlay(SmokeStart+index, "SmokeLay");
						A_OverlayOffset(SmokeStart+index, 130+Player.GetPSprite(Lay1).X+Bob.X, 170+Bob.Y);
						Player.GetPSprite(SmokeStart+index).Scale = (1,1)*CFRandom(.3, .4);
						A_OverlayAlpha(SmokeStart+index, CFRandom(.01, .08)*3);
					}
				}
			}
			#### H 1 A_OverlayOffset(Lay1, 2, 4, WOF_ADD);
			#### GF 1 A_OverlayOffset(Lay1, -5, -20, WOF_ADD);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			#### FF 1 A_OverlayOffset(Lay1, 1, -5, WOF_ADD);
			#### FEEDD 1 A_OverlayOffset(Lay1, 11, 6, WOF_ADD);//Lower
			#### CCC 1 A_OverlayOffset(Lay1, 3, 6, WOF_ADD);
			#### A 1{
				A_OverlayPivot(Lay1, .5, 0);
				Float Scal = CFRandom(.95, 1.1);
				A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, CFRandom(-4, 4), CFRandom(1, 6));
				A_OverlayRotate(Lay1, CFRandom(-.5, .5));
			}
			#### AA 1{
				Player.GetPSprite(Lay1).Scale = (1,1)+(Player.GetPSprite(Lay1).Scale-(1,1))*.4;
				Player.GetPSprite(Lay1).X *= .4;
				Player.GetPSprite(Lay1).Y *= .4;
				Player.GetPSprite(Lay1).Rotation *= .4;
			}
			#### A 4{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			Goto GunWait;
			
		GunFlash:
			SH1F A 1 BRIGHT {
				A_OverlayOffset(Lay2, Player.GetPSprite(Lay1).X, Player.GetPSprite(Lay1).Y);
				Player.GetPSprite(Lay1).Scale = Player.GetPSprite(Lay1).Scale;
				A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
				A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
				A_OverlayPivot(Lay2, .5, .5);
			}
			SH1F BA 1 BRIGHT{
				if(MRIntW_Smoke){
					For(int i=CRandom(0, 2);i<3;i++){
						int index;
						For(index=0;index<invoker.Smokes.Size()+1;index++){
							if(index>=invoker.Smokes.Size()){index=-1;Break;}
							if(!invoker.Smokes[index])Break;
						}
						
						if(index<invoker.Smokes.Size() && index>-1){
							MRIntWeaps_SmokeContainer a = New('MRIntWeaps_SmokeContainer');
							a.Vel = (CFRandom(-.05, .05), CFRandom(.1, .2), CFRandom(.7, 1.2));
							invoker.Smokes[index] = a;
														
							A_Overlay(MuzzleSmokeStart-index, "MuzzleSmokeLay");
							A_OverlayOffset(MuzzleSmokeStart-index, 130, 110);
							Player.GetPSprite(MuzzleSmokeStart-index).Scale = (1,1)*CFRandom(.2, .2);
							A_OverlayAlpha(MuzzleSmokeStart-index, CFRandom(.01, .08)*3);
						}
					}
				}
			}
			Stop;
		Flash:
			TNT1 A 4 A_Light1();
			TNT1 B 3 A_Light2();
			Goto LightDone;
		
		Sprites:
			SH2G ACDEFGH 0;
			Stop;
	}
	
	Action Void A_IdleAnimation(int Lay = 2)//Idle hand bobbing
	{
		Bool Bers = MRIntW_BersShake>1 && FindInventory("PowerStrength");
		Float Mult = (Bers?2:1);
		if(invoker.BobState>=0){
			A_OverlayOffset(Lay, CFRandom(-.005, .015)*Mult, CFRandom(.01, .02)*Mult, WOF_ADD);
			if(invoker.BobState>90||Player.GetPSprite(Lay).Y>1.35){invoker.BobState = -invoker.BobState;}
			else invoker.BobState+=Mult;
		}
		else {
			A_OverlayOffset(Lay, -CFRandom(-.005, .015)*Mult, -CFRandom(.01, .02)*Mult, WOF_ADD);
			if(Player.GetPSprite(Lay).Y<0){A_OverlayOffset(Lay, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
			else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay).Y>0))invoker.BobState+=Mult;
		}
		if(Bers && GetAge()%2==0){//Shaking hand if got berserk
			A_OverlayOffset(Lay, CFRandom(-.25, .25), 0, WOF_INTERPOLATE|WOF_KEEPY);
			Player.GetPSprite(Lay).Y += CFRandom(-.25, .25);
			if(Player.GetPSprite(Lay).Y<0){Player.GetPSprite(Lay).Y = 0;invoker.BobState = 0;}
			if(Player.GetPSprite(Lay).Y>1.35){Player.GetPSprite(Lay).Y = 1.35;invoker.BobState = -90;}
		}
		
		if(MRIntW_IdleAnims)invoker.IdleDelay++;
	}
}
class MRIntWeaps_RocketLauncher : RocketLauncher Replaces RocketLauncher
{
	Default
	{
		Weapon.SlotNumber 5;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;//Main layer
	Const Lay2 = PSP_FLASH+1;//Gun flash
	Const Lay3 = -2;//Gun flash (explosion, behind the barrel)
	Const LightLay = PSP_FLASH+2;
	
	int BobState, IdleDelay, Muzzle, Explosions;
	Double RecoilDir;
	
	Float Recoil;
	Override Void DoEffect()
	{
		if(Recoil>0){Recoil-=.25;Owner.A_SetPitch(Owner.Pitch+.25*MRIntW_RecoilAmount);}
	}
	
	States
	{
	Select:
		TNT1 A 0 A_Overlay(Lay1, "GunRaise");
	Raise:
		#### A 1 A_Raise();
		Loop;
	Deselect:
		TNT1 A 0 A_Overlay(Lay1, "GunLower");
	Lower:
		#### A 1 A_Lower();
		Loop;
		
	GunRaise:
		TNT1 AAAA 1 {
			A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
			A_OverlayPivot(Lay1, .5, .5);
			A_OverlayOffset(Lay1, 61, 80);
			A_OverlayScale(Lay1, .5, .5);
			A_OverlayRotate(Lay1, -20);
		}
		MI1G C 1;
		MI1G CCCCCC 1 {
			A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			A_OverlayOffset(Lay1, -8, -10, WOF_ADD);
			A_OverlayScale(Lay1, .08, .08, WOF_ADD);
			A_OverlayRotate(Lay1, 2, WOF_ADD);
		}
		MI1G CC 1 {
			A_OverlayOffset(Lay1, -8, 4, WOF_ADD);
			A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
			A_OverlayRotate(Lay1, 4.2, WOF_ADD);
		}
		MI1G C 2{
			//invoker.IdleDelay = Min(invoker.IdleDelay, 0);
			A_OverlayOffset(Lay1, 0, 32, WOF_INTERPOLATE);
			A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
			A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			invoker.Muzzle = 1;
			invoker.BobState = 0;
		}
		#### # 0 {A_OverlayFlags(Lay1, PSPF_ADDWEAPON, true);A_OverlayOffset(Lay1, 0, 0);}
	GunWait:
		MI1G # 1 {
			A_IdleAnimation(Lay1);
			Player.GetPSprite(Lay1).Frame = invoker.Muzzle;
			
			if(invoker.Muzzle>0)invoker.Muzzle--;
		}
		#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
		#### # 0 A_JumpIf(invoker.IdleDelay>35 && abs(invoker.BobState)<2, "GunIdle1");
		Loop;
	GunLower:
		MI1G A 1 {
			//invoker.IdleDelay = Min(invoker.IdleDelay, 0);
			A_OverlayFlags(Lay1, PSPF_ADDWEAPON, false);
			A_OverlayPivot(Lay1, .5, .5);
			A_OverlayOffset(Lay1, 0, Player.GetPSprite(PSP_WEAPON).Y);
			A_OverlayRotate(Lay1, 0);
			A_OverlayScale(Lay1, 1, 1);
		}
		MI1G ## 1 {
			A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			A_OverlayOffset(Lay1, 10, -8, WOF_ADD);
			A_OverlayRotate(Lay1, -2, WOF_ADD);
		}
		MI1G # 1 {
			A_OverlayOffset(Lay1, -3, -3, WOF_ADD);
			A_OverlayRotate(Lay1, 0, WOF_ADD);
		}
		MI1G ## 1 {
			A_OverlayOffset(Lay1, -6, -1, WOF_ADD);
			A_OverlayScale(Lay1, 0, -.05, WOF_ADD);
			A_OverlayRotate(Lay1, 6, WOF_ADD);
		}
		MI1G ############# 1 {
			A_OverlayOffset(Lay1, -7, 15, WOF_ADD);
			A_OverlayRotate(Lay1, 1, WOF_ADD);
			A_OverlayScale(Lay1, -.05, -.05, WOF_ADD);
		}
		Stop;
	GunIdle1:
			#### # 0 {
				A_OverlayPivot(Lay1, .5, 1);
				invoker.BobState = 0;
				invoker.IdleDelay = CRandom(-10, -3)*70;
			}
			#### # 0 A_JumpIf(CRandom(0, 255)<100, "GunIdle2");
			#### AAAA 1 {A_Overlayoffset(Lay1, -.15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.1, .05, WOF_ADD);A_OverlayRotate(Lay1, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .1, .025, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .025, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.05, -.1, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 2 {
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_Overlayoffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_SetTics(CRandom(1,2));
			}
			#### # 0 A_JumpIf(CRandom(0, 10)<4, "GunIdle2");
			#### # 0 A_JumpIf(CRandom(0, 40)==1, "GunIdle1");
			Goto GunWait;
		GunIdle2:
			#### A 1 {A_Overlayoffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .05, -.1, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.025, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.1, .025, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_Overlayoffset(Lay1, -.1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .1, .05, WOF_ADD);A_OverlayRotate(Lay1, .1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAAA 1 {A_Overlayoffset(Lay1, .15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			Goto GunWait;
	
	Ready:
		TNT1 A 1 A_WeaponReady();
		Loop;
		
	Fire:
		TNT1 B 8 {if(!MRIntW_Lighting)A_GunFlash("Flash");A_Overlay(Lay1, "GunFire");if(MRIntW_InstantFire)A_SetTics(2);}
		TNT1 B 12 {
			//invoker.IdleDelay = Min(invoker.IdleDelay, 0);
			A_FireMissile();
			if(MRIntW_Recoil){invoker.Recoil+=3;A_SetPitch(Pitch-3*MRIntW_RecoilAmount);}//Recoil
		}
		TNT1 A 6 {if(!MRIntW_InstantFire)A_SetTics(0);else if(Player.GetPSprite(Lay1).Tics<4)A_WeaponReady(WRF_NOFIRE);}
		TNT1 B 0 A_ReFire();
		Goto Ready;
		
	GunFire:
		MI1G A 0 {A_OverlayOffset(Lay1, 0, 0);A_OverlayPivot(Lay1, .5, .5);}
		#### # 0 A_JumpIf(MRIntW_InstantFire, 7);
		MI1G AAABBCC 1 {A_OverlayOffset(Lay1, 0, .5, WOF_ADD);A_OverlayScale(Lay1, .01, .01, WOF_ADD);}
		#### # 0 A_Overlay(Lay2, "GunFlash");
		MI1G C 1 {
			A_OverlayPivot(Lay1, .5, 0);
			A_OverlayPivot(Lay2, .5, 0);
			Player.GetPSprite(Lay2).Scale = (1,1);
			Player.GetPSprite(Lay2).Rotation = 0;
			invoker.RecoilDir = CFRandom(-2, 2);
		}
		MI1G CC 1 {//Shot
			A_OverlayScale(Lay1, .3, .3, WOF_ADD);
			A_OverlayOffset(Lay1, invoker.RecoilDir, 2, WOF_ADD);
			A_OverlayRotate(Lay1, -invoker.RecoilDir, WOF_ADD);
			A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
			
			A_OverlayScale(Lay2, .3, .3, WOF_ADD);
			A_OverlayOffset(Lay2, invoker.RecoilDir, 2, WOF_ADD);
			A_OverlayRotate(Lay2, -invoker.RecoilDir, WOF_ADD);
			A_OverlayFlags(Lay2, PSPF_INTERPOLATE, false);
		}
		MI1G CC 1{
			A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			A_OverlayScale(Lay1, .15, .15, WOF_ADD);
			A_OverlayOffset(Lay1, invoker.RecoilDir*.5, 7, WOF_ADD);
		}
		MI1G C 1;
		MI1G CCCCB 1{
			Float Recover = CFRandom(.6, .7);
			Player.GetPSprite(Lay1).X *= Recover;
			Player.GetPSprite(Lay1).Y *= Recover;
			Player.GetPSprite(Lay1).Scale = (1,1)+(Player.GetPSprite(Lay1).Scale-(1,1))*Recover;
			Player.GetPSprite(Lay1).Rotation *= Recover;
		}
		#### A 2{
			A_OverlayOffset(Lay1, CFRandom(-4, 4), CFRandom(-2, 4), WOF_INTERPOLATE);
			Float Scal = CFRandom(.93, 1.04);
			A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
		}
		#### A 3{
			A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
			A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
			A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
		}
		Goto GunWait;
		
	GunFlash:
		MI1F A 1 BRIGHT {
			A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
			A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
		}
		MI1F B 1 BRIGHT;
		#### # 0 {
			A_Overlay(Lay3-invoker.Explosions, "GunFlash2");
			A_OverlayOffset(Lay3-invoker.Explosions, Player.GetPSprite(Lay2).X, Player.GetPSprite(Lay2).Y);
			invoker.Explosions++;
		}
		Stop;
	GunFlash2:
		MI1F CCC 1 BRIGHT {
			A_OverlayPivot(OverlayId(), .5, .5);
			A_OverlayFlags(OverlayId(), PSPF_RENDERSTYLE|PSPF_ALPHA, true);
			Player.GetPSprite(OverlayId()).Alpha = .7;
			A_OverlayRenderStyle(OverlayId(), STYLE_ADD);
			A_OverlayScale(Overlayid(), 1, 1);
		}
		MI1F DD 1 BRIGHT A_OverlayScale(OverlayId(), .1, .1, WOF_ADD);
		#### # 0 A_OverlayScale(OverlayId(), 1, 1);
		MI1F E 1 BRIGHT;
		MI1F E 1 BRIGHT {A_OverlayScale(OverlayId(), .015, .015, WOF_ADD);A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, true);}
		MI1F EEEE 1 BRIGHT {
			A_OverlayScale(OverlayId(), .025, .025, WOF_ADD);
			Player.GetPSprite(OverlayId()).Alpha -= .2;
		}
		#### # 0 {invoker.Explosions--;}
		Stop;
		
	Flash:
		TNT1 A 3 A_Light1();
		TNT1 A 4;
		TNT1 AA 4 A_Light2();
		Goto LightDone;
	}
	
	Action Void A_IdleAnimation(int Lay = 2)//Idle hand bobbing
	{
		Bool Bers = MRIntW_BersShake>1 && FindInventory("PowerStrength");
		Float Mult = (Bers?2:1);
		if(invoker.BobState>=0){
			A_OverlayOffset(Lay, CFRandom(-.005, .015)*Mult, CFRandom(.01, .02)*Mult, WOF_ADD);
			if(invoker.BobState>90||Player.GetPSprite(Lay).Y>1.35){invoker.BobState = -invoker.BobState;}
			else invoker.BobState+=Mult;
		}
		else {
			A_OverlayOffset(Lay, -CFRandom(-.005, .015)*Mult, -CFRandom(.01, .02)*Mult, WOF_ADD);
			if(Player.GetPSprite(Lay).Y<0){A_OverlayOffset(Lay, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
			else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay).Y>0))invoker.BobState+=Mult;
		}
		if(Bers && GetAge()%2==0){//Shaking hand if got berserk
			A_OverlayOffset(Lay, CFRandom(-.25, .25), 0, WOF_INTERPOLATE|WOF_KEEPY);
			Player.GetPSprite(Lay).Y += CFRandom(-.25, .25);
			if(Player.GetPSprite(Lay).Y<0){Player.GetPSprite(Lay).Y = 0;invoker.BobState = 0;}
			if(Player.GetPSprite(Lay).Y>1.35){Player.GetPSprite(Lay).Y = 1.35;invoker.BobState = -90;}
		}
		
		if(MRIntW_IdleAnims)invoker.IdleDelay++;
	}
}
Class MRIntWeaps_Chaingun: Chaingun Replaces Chaingun
{
	Default{
		Weapon.SlotNumber 4;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;
	Const Lay2 = PSP_FLASH+1;
	
	int BobState, IdleDelay, LastFrame;
	Float Rotation;
	
	Float Recoil;
	Override Void DoEffect()
	{
		if(Recoil>0){
			Recoil-=.5;
			Owner.A_SetPitch(Owner.Pitch+.5*MRIntW_RecoilAmount);
		}
		
		For(int i=0;i<Casings.Size();i++){
			if(Casings[i])DoCasing(i);
		}
	}
	
	States{
		Select:
			TNT1 A 0 A_Overlay(Lay1, "GunRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "GunLower");
		Lower:
			#### A 1 A_Lower();
			Loop;
			
		GunRaise:
			TNT1 AAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, 51, 90);
				A_OverlayScale(Lay1, 1.2, 1.2);
				A_OverlayRotate(Lay1, -10.5);
			}
			CH1G A 1;
			CH1G DABCDABBCCD 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -4, -5, WOF_ADD);
				A_OverlayScale(Lay1, -.025, -.025, WOF_ADD);
				A_OverlayRotate(Lay1, 1, WOF_ADD);
			}
			CH1G D 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayRotate(Lay1, 0);
				invoker.Rotation = 0;}
			#### # 0 A_JumpIf(CRandom(0, 255)<3, "GunRotate");
		GunWait:
			CH1G A 1 A_IdleAnimation(Lay1);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			#### # 0 A_JumpIf(invoker.IdleDelay>35 && abs(invoker.BobState)<2, "GunIdle1");
			Loop;
		GunLower:
			CH1G # 1 {
				Player.GetPSprite(lay1).Frame = invoker.LastFrame;
				invoker.LastFrame = 0;
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayRotate(Lay1, 0);
				A_OverlayScale(Lay1, 1, 1);
			}
			CH1G ########## 1 {
				if(invoker.Rotation>0 && GetAge()%int(3/invoker.Rotation)==0){
					Player.GetPSprite(lay1).Frame++;
					if(Player.GetPSprite(lay1).Frame>3)Player.GetPSprite(lay1).Frame = 0;
					invoker.Rotation -= .25;
				}
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, 5, 0, WOF_ADD);
				A_OverlayRotate(Lay1, -2, WOF_ADD);
				A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			Stop;
		GunIdle1:
			#### # 0 {
				A_OverlayPivot(Lay1, .5, 1);
				invoker.BobState = 0;
				invoker.IdleDelay = CRandom(-10, -3)*70;
			}
			#### # 0 A_JumpIf(CRandom(0, 255)<100, "GunIdle2");
			#### AAAA 1 {A_Overlayoffset(Lay1, -.15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.1, .05, WOF_ADD);A_OverlayRotate(Lay1, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .1, .025, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .025, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.05, -.1, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 2 {
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_Overlayoffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_SetTics(CRandom(1,2));
			}
			#### # 0 A_JumpIf(CRandom(0, 10)<4, "GunIdle2");
			#### # 0 A_JumpIf(CRandom(0, 40)==1, "GunIdle1");
			Goto GunWait;
		GunIdle2:
			#### A 1 {A_Overlayoffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .05, -.1, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.025, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.1, .025, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_Overlayoffset(Lay1, -.1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .1, .05, WOF_ADD);A_OverlayRotate(Lay1, .1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAAA 1 {A_Overlayoffset(Lay1, .15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			Goto GunWait;
		
		Ready:
			TNT1 A 1 A_WeaponReady();
			Loop;
			
		Fire:
			#### # 0 A_Overlay(Lay1, "GunFire");
			TNT1 AA 4 {
				A_FireCGun();
				A_Overlay(Lay2, "GunFlash");
				if(MRIntW_Recoil){//Recoil
					invoker.Recoil+=1;
					A_SetPitch(Pitch-1*MRIntW_RecoilAmount);
					A_SetAngle(Angle);
				}
			}
			TNT1 A 0 A_ReFire();
			Goto Ready;
		GunFire:
			CH1G A 1 {//Shot
				A_OverlayPivot(Lay1, .5, 0);
				Player.GetPSprite(Lay1).Scale = (1,1);
				Player.GetPSprite(Lay1).X = Player.GetPSprite(Lay1).Y = 0;
				Player.GetPSprite(Lay1).Rotation = 0;
			}
			CH1G B 1 {//Recoil
				Float Scal = CFRandom(.01, .05);
				Vector2 Ofst = (CFRandom(-2, 2), CFRandom(3, 5));
				Float Rotate = CRandomPick(0, CFRandom(-.6, .6));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				
				if(!MRIntW_Casings)Return;
				int index;
				For(index=0;index<invoker.Casings.Size()+1;index++){
					if(index>=invoker.Casings.Size()){index=-1;Break;}
					if(!invoker.Casings[index]){invoker.Casings[index] = true;Break;}
				}
				
				if(index<invoker.Casings.Size() && index>-1){
					A_Overlay(CaseStart+index, "CasingLay");
					invoker.CasingDir[index] = CFRandom(-.7, 1.5);
				}
			}
			CH1G CD 1{//Recover
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .3;
				Player.GetPSprite(Lay1).Y *= .3;
				Player.GetPSprite(Lay1).Rotation *= .5;
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				invoker.Rotation = 2;
			}
			CH1G A 1;//Shot
			CH1G B 1 {//Recoil
				Float Scal = CFRandom(.005, .03);
				Vector2 Ofst = (CFRandom(-1, 1), CFRandom(2, 4));
				Float Rotate = CRandomPick(0, CFRandom(-.3, .3));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				
				if(!MRIntW_Casings)Return;
				int index;
				For(index=0;index<invoker.Casings.Size()+1;index++){
					if(index>=invoker.Casings.Size()){index=-1;Break;}
					if(!invoker.Casings[index]){invoker.Casings[index] = true;Break;}
				}
				
				if(index<invoker.Casings.Size() && index>-1){
					A_Overlay(CaseStart+index, "CasingLay");
					invoker.CasingDir[index] = CFRandom(-.7, 1.5);
				}
			}
			CH1G CD 1{//Recover
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .3;
				Player.GetPSprite(Lay1).Y *= .3;
				Player.GetPSprite(Lay1).Rotation *= .5;
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				invoker.Rotation = 2;
			}
			CH1G A 1 {
				A_OverlayOffset(Lay1, CFRandom(-2, 2), CFRandom(-3, 3), WOF_INTERPOLATE);
				Float Scal = CFRandom(.95, 1);
				A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, CFRandom(-.5, .5), WOF_INTERPOLATE);
			}
			Goto GunRotate;
		GunRotate:
			CH1G B 1{
				Player.GetPSprite(Lay1).Scale = (1,1)+(Player.GetPSprite(Lay1).Scale-(1,1))*.8;
				Player.GetPSprite(Lay1).X *= .8;
				Player.GetPSprite(Lay1).Y *= .8;
				Player.GetPSprite(Lay1).Rotation *= .8;
				invoker.LastFrame = 1;
			}
			CH1G C 2{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				invoker.LastFrame = 2;
				invoker.Rotation -= .1;
			}
			CH1G DDAAABBBBCCCCDDDDDD 1 {
				invoker.Rotation -= .1;
				invoker.LastFrame = Player.GetPSprite(Lay1).Frame;
				A_IdleAnimation(Lay1);
			}
			#### # 0{
				invoker.Rotation = 0;
				invoker.LastFrame = 0;
			}
			Goto GunWait;
			
		GunFlash:
			CH1F A 1 BRIGHT {
				A_OverlayOffset(Lay2, Player.GetPSprite(Lay1).X, Player.GetPSprite(Lay1).Y);
				Player.GetPSprite(Lay1).Scale = Player.GetPSprite(Lay1).Scale;
				A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
				A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
				A_OverlayPivot(Lay2, .5, 0);
			}
			CH1F BC 1 BRIGHT;
			Stop;
		Flash:
			TNT1 A 5 A_Light1();
			Goto LightDone;
			TNT1 A 5 A_Light2();
			Goto LightDone;
	}
	
	Action Void A_IdleAnimation(int Lay = 2)//Idle hand bobbing
	{
		Bool Bers = MRIntW_BersShake>1 && FindInventory("PowerStrength");
		Float Mult = (Bers?2:1);
		if(invoker.BobState>=0){
			A_OverlayOffset(Lay, CFRandom(-.005, .015)*Mult, CFRandom(.01, .02)*Mult, WOF_ADD);
			if(invoker.BobState>90||Player.GetPSprite(Lay).Y>1.35){invoker.BobState = -invoker.BobState;}
			else invoker.BobState+=Mult;
		}
		else {
			A_OverlayOffset(Lay, -CFRandom(-.005, .015)*Mult, -CFRandom(.01, .02)*Mult, WOF_ADD);
			if(Player.GetPSprite(Lay).Y<0){A_OverlayOffset(Lay, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
			else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay).Y>0))invoker.BobState+=Mult;
		}
		if(Bers && GetAge()%2==0){//Shaking hand if got berserk
			A_OverlayOffset(Lay, CFRandom(-.25, .25), 0, WOF_INTERPOLATE|WOF_KEEPY);
			Player.GetPSprite(Lay).Y += CFRandom(-.25, .25);
			if(Player.GetPSprite(Lay).Y<0){Player.GetPSprite(Lay).Y = 0;invoker.BobState = 0;}
			if(Player.GetPSprite(Lay).Y>1.35){Player.GetPSprite(Lay).Y = 1.35;invoker.BobState = -90;}
		}
		
		if(MRIntW_IdleAnims)invoker.IdleDelay++;
	}
}
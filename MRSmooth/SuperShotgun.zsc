Class MRIntWeaps_SuperShotgun: SuperShotgun Replaces SuperShotgun
{
	Default{
		Weapon.SlotNumber 3;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;//Main layer
	Const Lay2 = PSP_FLASH+1;//Muzzle flash
	Const LeftHand = PSP_FLASH+40;//Hand with shells
	
	int BobState, IdleDelay;
	Bool LowerOpen;//For switching mid reload
	
	MRIntWeaps_SmokeContainer Smokes[20];
	
	Float Recoil;
	Override Void DoEffect()
	{
		if(Recoil>0){Recoil-=.25;Owner.A_SetPitch(Owner.Pitch+.25*MRIntW_RecoilAmount);}
		
		For(int i=0;i<Casings.Size();i++){
			if(Casings[i])DoCasing(i);
		}
	}
	
	Const CaseLife = 20;
	Bool Casings[50];
	Float CasingDir[50];
	Void DoCasing(int index)
	{
		int Lay = index+PSP_FLASH+60;
		Let PSP = Owner.Player.GetPSprite(Lay);
		int Age = PSP.Tics;
		if(Age<2)Return;
		
		if(PSP.Y>280+32){
			Owner.Player.SetPsprite(Lay, Null);
			Casings[index] = false;
			Return;
		}
		
		if(Age<CaseLife)PSP.bInterpolate = true;
		Double VelZ = (Age-(CaseLife-5))/2;
		VelZ /= CaseLife/2;
		
		Double VelMult = CFRandom(1, 2);
		
		if(Age<CaseLife-5)PSP.Y += Owner.Player.Cmd.Pitch*.005;
		PSP.Y += Owner.Vel.Z;
		PSP.Y -= VelZ*70*VelMult*Cos(Pitch);
		if(Age<CaseLife-5)PSP.X += Owner.Player.Cmd.Yaw*.005;
		PSP.X -= 17*VelMult;
		PSP.Scale *= 1+.05*CasingDir[index];
		PSP.Rotation += 15;//*VelMult;
		
		//Console.Printf("Casing "..CaseLife-Age..": "..PSP.Y);
	}
	
	States{
		
		SmokeLay://From chamber
			NSHS A 0{
				A_OverlayFlags(OverlayId(), PSPF_ADDBOB|PSPF_ADDWEAPON, false);
				A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE|PSPF_FORCESTYLE|PSPF_FORCEALPHA, True);
				A_OverlayRenderStyle(OverlayId(), MRIntW_Smoke?STYLE_TRANSLUCENT:STYLE_NONE);
				A_OverlayPivot(OverlayId(), .5, .5);
				Player.GetPSprite(OverlayId()).Alpha=CFRandom(.3, .5);
			}
			NSHS A 1{
				A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE, True);
				A_OverlayRenderStyle(OverlayId(), MRIntW_Smoke?STYLE_TRANSLUCENT:STYLE_NONE);
			}
			NSHS AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1{
				int Index = OverlayId()-PSP_FLASH-10;
				A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, true);
				
				Player.GetPSprite(OverlayId()).Alpha-=.01;
				
				Float Scale = (CFRandom(.09, .13) + (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle))*.2);
				Scale -= (invoker.Smokes[Index].Vel.Y);
				Scale *= .1;
				A_OverlayScale(OverlayId(), Max(0, Scale), Max(0, Scale), WOF_ADD);
				
				if(Player.GetPSprite(OverlayId()).Scale.Length()>15)A_OverlayRenderStyle(OverlayId(), STYLE_NONE);
				Player.GetPSprite(OverlayId()).Y += Player.Cmd.Pitch*.02 + Max(0, (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle))*.1) + Vel.Z;
				Player.GetPSprite(OverlayId()).Y -= invoker.Smokes[Index].Vel.Z*Cos(Pitch);
				Player.GetPSprite(OverlayId()).Y += invoker.Smokes[Index].Vel.Y*Sin(Pitch);
				Player.GetPSprite(OverlayId()).X += Player.Cmd.Yaw*.02 + (Vel.X*Cos(Angle+90) + Vel.Y*Sin(Angle+90)*5);
				Player.GetPSprite(OverlayId()).X += invoker.Smokes[index].Vel.X;
			}
			TNT1 A 0 {invoker.Smokes[OverlayId()-PSP_FLASH-10].Destroy();invoker.Smokes[OverlayId()-PSP_FLASH-10]=Null;}
			Stop;
		
		CasingLay:
			SHTC A 0 {
				A_OverlayFlags(Overlayid(), PSPF_ADDWEAPON, false);
				Player.GetPSprite(OverlayId()).bInterpolate=false;
				A_OverlayPivot(OverlayId(), .5, .5);
				A_OverlayScale(OverlayId(), 1.1, 1.1);
				A_OverlayRotate(OverlayId(), -45);
			}
			SHTC A 20 A_SetTics(CaseLife);
			TNT1 A 0 {Player.GetPSprite(OverlayId()).bInterpolate=invoker.Casings[OverlayId()-60-PSP_FLASH]=false;}
			Stop;
		
		Select:
			TNT1 A 0 A_Overlay(Lay1, "GunRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "GunLower");
		Lower:
			#### A 1 A_Lower();
			Loop;
		
		GunRaise:
			TNT1 AAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, 51, 89);
				A_OverlayScale(Lay1, 1.2, 1.2);
				A_OverlayRotate(Lay1, -10.5);
			}
			SH12 A 1{invoker.LowerOpen = false;if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH22A0");}
			#### AAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -7, -9, WOF_ADD);
				A_OverlayScale(Lay1, -.02, -.02, WOF_ADD);
				A_OverlayRotate(Lay1, 1.2, WOF_ADD);
			}
			#### AA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -4, 4, WOF_ADD);
				A_OverlayScale(Lay1, -.02, -.02, WOF_ADD);
				A_OverlayRotate(Lay1, 1.4, WOF_ADD);
			}
			#### A 1 {
				A_OverlayOffset(Lay1, 0, 32, WOF_INTERPOLATE);
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			#### A 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayRotate(Lay1, 0);
			}
		GunWait:
			SH12 A 1 A_IdleAnimation(Lay1);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			#### # 0 A_JumpIf(invoker.IdleDelay>35 && abs(invoker.BobState)<2, "GunIdle1");
			Loop;
		GunLower:
			#### # 0 A_JumpIf(invoker.LowerOpen, "GunLowerOpen");
			SH12 A 1 {
				if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH22A0");
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON, false);
				A_OverlayOffset(Lay1, 0, Player.GetPSprite(PSP_WEAPON).Y);
				A_OverlayRotate(Lay1, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayPivot(Lay1, .5, 0);
			}
			#### ## 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -6, -6, WOF_ADD);
				A_OverlayRotate(Lay1, 1, WOF_ADD);
				//A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			#### # 1 {
				A_OverlayOffset(Lay1, -3, -3, WOF_ADD);
				A_OverlayRotate(Lay1, .5, WOF_ADD);
				//A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			#### ## 1 {
				A_OverlayOffset(Lay1, 10, 14, WOF_ADD);
				A_OverlayRotate(Lay1, -1, WOF_ADD);
				//A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			#### ####### 1 {
				A_OverlayOffset(Lay1, 7, 10, WOF_ADD);
				A_OverlayRotate(Lay1, -1, WOF_ADD);
				A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			Stop;
		GunLowerOpen:
			SH12 D 1 {
				if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH22A0");
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, -80, -25);
				A_OverlayRotate(Lay1, 4);
				A_OverlayScale(Lay1, 1, 1);
			}
			#### ################ 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -12, 2, WOF_ADD);
				A_OverlayRotate(Lay1, 2, WOF_ADD);
				A_OverlayScale(Lay1, .01, .01, WOF_ADD);
			}
			Stop;
		GunIdle1:
			#### # 0 {
				A_OverlayPivot(Lay1, .5, 1);
				invoker.BobState = 0;
				invoker.IdleDelay = CRandom(-10, -3)*70;
			}
			#### # 0 A_JumpIf(CRandom(0, 255)<100, "GunIdle2");
			#### AAAA 1 {A_Overlayoffset(Lay1, -.15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.1, .05, WOF_ADD);A_OverlayRotate(Lay1, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .1, .025, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .025, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.05, -.1, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 2 {
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_Overlayoffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_SetTics(CRandom(1,2));
			}
			#### # 0 A_JumpIf(CRandom(0, 10)<4, "GunIdle2");
			#### # 0 A_JumpIf(CRandom(0, 40)==1, "GunIdle1");
			Goto GunWait;
		GunIdle2:
			#### A 1 {A_Overlayoffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .05, -.1, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.025, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.1, .025, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_Overlayoffset(Lay1, -.1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .1, .05, WOF_ADD);A_OverlayRotate(Lay1, .1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAAA 1 {A_Overlayoffset(Lay1, .15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			Goto GunWait;
		
		Ready:
			TNT1 A 1 A_WeaponReady;
			Loop;
		Fire:
			TNT1 A 3 {A_Overlay(Lay1, "GunFire");if(MRIntW_InstantFire)A_SetTics(0);}
			TNT1 A 7 {
				A_FireShotgun2();
				A_Overlay(Lay2, "GunFlash");
				if(MRIntW_Recoil){invoker.Recoil+=3;A_SetPitch(Pitch-3*MRIntW_RecoilAmount);}//Recoil
			}
			TNT1 A 7;//B
			TNT1 A 7 A_CheckReload();
			TNT1 A 7 A_OpenShotgun2();
			TNT1 A 7;
			TNT1 A 7 A_LoadShotgun2();
			TNT1 A 6;
			TNT1 A 6 A_CloseShotgun2();//H
			TNT1 A 3 {if(!MRIntW_InstantFire)A_SetTics(0);else if(Player.GetPSprite(Lay1).Tics<2)A_WeaponReady(WRF_NOFIRE);}
			TNT1 A 5 A_ReFire();
			Goto Ready;
			
		GunFire:
			SH12 # 0 {A_OverlayPivot(Lay1, .5, .5);if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("SH22A0");}
			#### # 0 A_JumpIf(MRIntW_InstantFire, 3);
			#### A 2;
			#### A 1 A_OverlayOffset(Lay1, 0, 1, WOF_ADD);
			#### A 1;//Shot
			#### A 1 {//Recoil
				Float Scal = CFRandom(.3, .4);
				Vector2 Ofst = (CRandom(-4, 2), CFRandom(10, 17));
				Float Rotate = CRandomPick(0, CFRandom(.9, 1.5));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
			}
			#### A 1;
			#### AAA 1{//Recover
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .5;
				Player.GetPSprite(Lay1).Y *= .5;
				Player.GetPSprite(Lay1).Rotation *= .5;
			}
			#### A 1{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, CFRandom(-2, 2), CFRandom(0, 2), WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, CFRandom(-.5, .5), WOF_INTERPOLATE);
			}
			#### B 1 {invoker.LowerOpen = true;A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);A_OverlayPivot(Lay1, .5, 1);}//Start Reload
			#### BCC 1 A_OverlayOffset(Lay1, -10, -5, WOF_ADD);
			#### CD 1 A_OverlayOffset(Lay1, -20, -5, WOF_ADD);
			#### DD 1 {A_OverlayOffset(Lay1, -10, -2, WOF_ADD);A_OverlayRotate(Lay1, 2, WOF_ADD);}//ReloadCheck
			#### DD 1 {A_OverlayRotate(Lay1, 1.5, WOF_ADD);A_OverlayOffset(Lay1, -3, -1, WOF_ADD);}
			#### # 0 {invoker.LowerOpen = false;}
			#### DDD 1 {A_OverlayRotate(Lay1, -7, WOF_ADD);A_OverlayScale(Lay1, -.05, -.05, WOF_ADD);A_OverlayOffset(Lay1, 30, 10, WOF_ADD);}//Openin
			#### # 0 {A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);A_OverlayPivot(Lay1, .5, 0);}
			#### P 0 A_JumpIf(MRIntW_Casings, 2);
			#### E 0;
			#### # 1 {A_OverlayRotate(Lay1, 50);A_OverlayScale(Lay1, 1, 1);A_OverlayOffset(Lay1, -10, 20);}
			#### ## 1 {A_OverlayRotate(Lay1, -36, WOF_ADD);A_OverlayOffset(Lay1, 8, -8, WOF_ADD);A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);}
			#### # 0{
				if(MRIntW_Smoke){
					Double Alpha = CFRandom(.01, .08)*3;
					int Amount = CRandom(0, 2);
					For(int i=Amount;i<3;i++){
						int index;
						For(index=0;index<invoker.Smokes.Size();index++){
							if(!invoker.Smokes[index])Break;
						}
						if(index<invoker.Smokes.Size()){
							MRIntWeaps_SmokeContainer a = New('MRIntWeaps_SmokeContainer');
							a.Vel = (CFRandom(-1.4, .5), -CFRandom(.3, .5), CFRandom(-.5, .5));
							invoker.Smokes[index] = a;
														
							A_Overlay(PSP_FLASH+10+index, "SmokeLay");
							A_OverlayOffset(PSP_FLASH+10+index, 95, 137);
							Player.GetPSprite(PSP_FLASH+10+index).Scale = (1,1)*CFRandom(.3, .4);
							A_OverlayAlpha(PSP_FLASH+10+index, Alpha);
						}
					}
					
					For(int i=Amount;i<3;i++){
						int index;
						For(index=0;index<invoker.Smokes.Size();index++){
							if(!invoker.Smokes[index])Break;
						}
						if(index<invoker.Smokes.Size()){
							MRIntWeaps_SmokeContainer a = New('MRIntWeaps_SmokeContainer');
							a.Vel = (CFRandom(-1.4, .5), -CFRandom(.3, .5), CFRandom(-.5, .5));
							invoker.Smokes[index] = a;
														
							A_Overlay(PSP_FLASH+10+index, "SmokeLay");
							A_OverlayOffset(PSP_FLASH+10+index, 95+20, 137);
							Player.GetPSprite(PSP_FLASH+10+index).Scale = (1,1)*CFRandom(.3, .4);
							A_OverlayAlpha(PSP_FLASH+10+index, Alpha);
						}
					}
				}
				
				
				if(!MRIntW_Casings)Return;
				Float Dir = CFRandom(-.9, 1.5);

				For(int i=0;i<2;i++){
					int index;
					For(index=0;index<invoker.Casings.Size();index++){
						if(!invoker.Casings[index]){invoker.Casings[index] = true;Break;}
					}
					
					if(index<invoker.Casings.Size()){
						A_Overlay(PSP_FLASH+60+index, "CasingLay");
						A_OverlayOffset(PSP_FLASH+60+index, 145+i*10, 160+32);
						invoker.CasingDir[index] = Dir;
					}
				}
			}
			#### # 0 {A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);A_OverlayRotate(Lay1, 4);}
			#### FF 1 {A_OverlayRotate(Lay1, -2, WOF_ADD);A_OverlayOffset(Lay1, -2, 2);}
			#### F 1  A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
			#### # 0 A_Overlay(LeftHand, "HandLoading");
			#### FF 4 A_OverlayOffset(Lay1, CFRandom(-.5, .5), CFRandom(0, 1), WOF_INTERPOLATE);//Wait for the shell
			#### H 1;//Load
			#### HI 1 A_OverlayOffset(Lay1, 8, 6, WOF_ADD);
			#### JJ 1 {A_OverlayOffset(Lay1, 8, 12, WOF_ADD);A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);}
			#### Z 1;
			#### K 1 {A_OverlayRotate(Lay1, -50);A_OverlayOffset(Lay1, 55, 45);}
			#### KK 1 {A_OverlayRotate(Lay1, 1, WOF_ADD);A_OverlayOffset(Lay1, 3, -4, WOF_ADD);}
			#### KKK 1 {A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);A_OverlayRotate(Lay1, 16, WOF_ADD);A_OverlayOffset(Lay1, -12, -20, WOF_ADD);}
			#### KKK 1 {A_OverlayOffset(Lay1, -25, 11, WOF_ADD);A_OverlayRotate(Lay1, 13, WOF_ADD);}
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
			#### L 1 {A_OverlayRotate(Lay1, 0);A_OverlayOffset(Lay1, -5, -5);}
			#### L 1 {A_OverlayOffset(Lay1, -10, 10, WOF_INTERPOLATE);A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);}
			#### A 1 {A_OverlayOffset(Lay1, -CFRandom(4, 8), CFRandom(3, 6));A_OverlayRotate(Lay1, CFRandom(1, 2));}
			#### A 2 {A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);}
			Goto GunWait;
			
		HandLoading:
			SH12 GG 1 {
				A_OverlayPivot(LeftHand, .5, .5);
				A_OverlayOffset(LeftHand, -60, 60);
				A_OverlayRotate(LeftHand, -15);
				if(MRIntW_BrownGloves)Player.GetPSprite(LeftHand).Sprite = GetSpriteIndex("SH22A0");
			}
			#### GG 1 {A_OverlayOffset(LeftHand, 10, -30, WOF_ADD);A_OverlayRotate(LeftHand, 7.5, WOF_ADD);A_OverlayScale(LeftHand, .03, .03, WOF_ADD);A_OverlayFlags(LeftHand, PSPF_INTERPOLATE, true);}
			#### G 1 {A_OverlayRotate(LeftHand, 4, WOF_ADD);A_OverlayOffset(LeftHand, -8, -3, WOF_ADD);}
			#### GGG 1 {A_OverlayOffset(LeftHand, 19, 2.8, WOF_ADD);A_OverlayRotate(LeftHand, -2, WOF_ADD);A_OverlayScale(LeftHand, -.025, -.025, WOF_ADD);}//A_OverlayRotate(LeftHand, 5, WOF_ADD);}
			Stop;
			
		GunFlash:
			SH12 N 1 BRIGHT {
				A_OverlayOffset(Lay2, Player.GetPSprite(Lay1).X, Player.GetPSprite(Lay1).Y);
				Player.GetPSprite(Lay1).Scale = Player.GetPSprite(Lay1).Scale;
				A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
				A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
				A_OverlayPivot(Lay2, .5, .5);
			}
			#### ON 1 BRIGHT;
			Stop;
			
			
		Flash:
			TNT1 A 4 A_Light1();
			TNT1 A 3 A_Light2();
			Goto LightDone;
		
		Sprites:
			SH22 ABCDEFGHIJKL 0;
			Stop;
	}
	
	Action Void A_IdleAnimation(int Lay = 2)//Idle hand bobbing
	{
		Bool Bers = MRIntW_BersShake>1 && FindInventory("PowerStrength");
		Float Mult = (Bers?2:1);
		if(invoker.BobState>=0){
			A_OverlayOffset(Lay, CFRandom(-.005, .015)*Mult, CFRandom(.01, .02)*Mult, WOF_ADD);
			if(invoker.BobState>90||Player.GetPSprite(Lay).Y>1.35){invoker.BobState = -invoker.BobState;}
			else invoker.BobState+=Mult;
		}
		else {
			A_OverlayOffset(Lay, -CFRandom(-.005, .015)*Mult, -CFRandom(.01, .02)*Mult, WOF_ADD);
			if(Player.GetPSprite(Lay).Y<0){A_OverlayOffset(Lay, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
			else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay).Y>0))invoker.BobState+=Mult;
		}
		if(Bers && GetAge()%2==0){//Shaking hand if got berserk
			A_OverlayOffset(Lay, CFRandom(-.25, .25), 0, WOF_INTERPOLATE|WOF_KEEPY);
			Player.GetPSprite(Lay).Y += CFRandom(-.25, .25);
			if(Player.GetPSprite(Lay).Y<0){Player.GetPSprite(Lay).Y = 0;invoker.BobState = 0;}
			if(Player.GetPSprite(Lay).Y>1.35){Player.GetPSprite(Lay).Y = 1.35;invoker.BobState = -90;}
		}
		
		if(MRIntW_IdleAnims)invoker.IdleDelay++;
	}
}
Class MRIntWeaps_Chainsaw: Chainsaw Replaces Chainsaw
{
	Default{
		Weapon.SlotNumber 1;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;
	
	int SawFrame;
	States{
		Select:
			TNT1 A 0 A_Overlay(Lay1, "SawRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "SawLower");
		Lower:
			TNT1 A 1 A_Lower();
			Loop;
		
		SawRaise:
			TNT1 AAAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, -12, 135);
				A_OverlayScale(Lay1, .4, .4);
				A_OverlayRotate(Lay1, 20);
			}
			SAWG E 1;
			SAWG EEEEDDD 1 {
				A_OverlayOffset(Lay1, 1, -15, WOF_ADD);
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayScale(Lay1, .09, .09, WOF_ADD);
				A_OverlayRotate(Lay1, -3, WOF_ADD);
			}
			SAWG D 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayPivot(Lay1, .5, 1);
				A_OverlayRotate(Lay1, 0);
				invoker.SawFrame = 2;
			}
		SawReady:
			SAWG # 1 {A_OverlayOffset(Lay1, CFRandom(-.5, .5), CFRandom(-.5, .5), WOF_INTERPOLATE);A_OverlayRotate(Lay1, CFRandom(-.25, .25), WOF_INTERPOLATE);
				Player.GetPSprite(Lay1).Frame = invoker.SawFrame;A_OverlayScale(Lay1, CFRandom(1, 1.025), CFRandom(1, 1.025), WOF_INTERPOLATE);
			}
			SAWG ### 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, CFRandom(-.5, .5), CFRandom(-.5, .5), WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, CFRandom(-.25, .25), WOF_INTERPOLATE);
				A_OverlayScale(Lay1, CFRandom(1, 1.025), CFRandom(1, 1.025), WOF_INTERPOLATE);
				if(GetAge()%2==0)invoker.SawFrame++;
				if(invoker.SawFrame>5)invoker.SawFrame = 2;
				Player.GetPSprite(Lay1).Frame = invoker.SawFrame;
			}
			#### # 0{A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);A_OverlayPivot(Lay1, .5, 1);}
			Loop;
		SawLower:
			SAWG # 1 {
				A_OverlayOffset(Lay1, CFRandom(-.5, .5), CFRandom(-.5, .5));
				A_OverlayRotate(Lay1, CFRandom(-.5, .5));
				Player.GetPSprite(Lay1).Frame = invoker.SawFrame;
				A_OverlayScale(Lay1, CFRandom(1, 1.05), CFRandom(1, 1.05), WOF_INTERPOLATE);
			}
			SAWG ###### 1 {
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -4, 14, WOF_ADD);
				A_OverlayRotate(Lay1, 4, WOF_ADD);
				A_OverlayScale(Lay1, -.05, -.05, WOF_ADD);
			}
			Stop;
		
		Ready:
			TNT1 AA 4 A_WeaponReady();
			#### # 0 A_Overlay(Lay1, "SawReady", false);
			Loop;
		
		SawStartCut:
			SAWG # 1{Player.GetPSprite(Lay1).Frame = invoker.SawFrame;A_OverlayPivot(Lay1, .5, 1);}
			#### # 1 {A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);A_OverlayScale(Lay1, 1, .8, WOF_INTERPOLATE);}
		SawCutLoop:
			SAWG BA 1{
				A_OverlayPivot(Lay1, .5, .5);
				A_OverlayOffset(Lay1, CFRandom(-.5, .5), CFRandom(1, 2), WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, CFRandom(-1, 1), WOF_INTERPOLATE);
				Float Scal = CFRandom(.99, 1.07);
				A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
			}
			Loop;
		SawStopCut:
			SAWG A 1;
			SAWG # 1{
				Player.GetPSprite(Lay1).Frame = invoker.SawFrame;
				A_OverlayPivot(Lay1, .5, 1);
				A_OverlayScale(Lay1, 1, .8);
			}
			SAWG ## 1{
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayScale(Lay1, 0, .1, WOF_ADD);
				if(GetAge()%2==0)invoker.SawFrame++;
				if(invoker.SawFrame>5)invoker.SawFrame = 2;
				Player.GetPSprite(Lay1).Frame = invoker.SawFrame;
			}
			Goto SawReady;
		
		Fire:
			TNT1 A 0 A_Overlay(Lay1, "SawStartCut");
		FireLoop:
			TNT1 AA 4 A_Saw();
			SAWG B 0 A_ReFire("FireLoop");
			TNT1 A 0 A_Overlay(Lay1, "SawStopCut");
			Goto Ready;
	}
}
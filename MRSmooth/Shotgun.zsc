Class MRIntWeaps_Shotgun: Shotgun Replaces Shotgun
{
	Default{
		Weapon.SlotNumber 3;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;
	Const Lay2 = PSP_FLASH+1;
	
	int BobState;
	States{
		Select:
			TNT1 A 0 A_Overlay(Lay1, "GunRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "GunLower");
		Lower:
			TNT1 A 1 A_Lower();
			Loop;
		
		GunRaise:
			TNT1 AAAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayOffset(Lay1, 51, 90);
				A_OverlayScale(Lay1, 1.2, 1.2);
				A_OverlayRotate(Lay1, -10.5);
			}
			SHTG A 1;
			SHTG AAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -7, -8, WOF_ADD);
				A_OverlayScale(Lay1, -.025, -.025, WOF_ADD);
				A_OverlayRotate(Lay1, 1.5, WOF_ADD);}
			SHTG A 1 {A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayRotate(Lay1, 0);}
		GunWait:
			SHTG A 1 {
				if(invoker.BobState>=0){
					A_OverlayOffset(Lay1, CFRandom(-.005, .015), CFRandom(.01, .02), WOF_ADD);//"Breathing"
					if(invoker.BobState>90){invoker.BobState = -invoker.BobState;}
					else invoker.BobState++;
				}
				else {
					A_OverlayOffset(Lay1, -CFRandom(-.005, .015), -CFRandom(.01, .02), WOF_ADD);
					if(Player.GetPSprite(Lay1).Y<0){A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
					else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay1).Y>0))invoker.BobState++;
				}
			}
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			Loop;
		GunLower:
			SHTG A 1 {A_OverlayOffset(Lay1, 0, 0);
				A_OverlayRotate(Lay1, 0);
				A_OverlayScale(Lay1, 1, 1);
			}
			SHTG ###### 1 {
				A_OverlayPivot(Lay1, .5, 0);
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, 25, 14, WOF_ADD);
				A_OverlayRotate(Lay1, -4, WOF_ADD);
				A_OverlayScale(Lay1, .025, .025, WOF_ADD);
			}
			Stop;
		
		Ready:
			TNT1 A 1 A_WeaponReady();
			Loop;
			
		Fire:
			TNT1 A 3 A_Overlay(Lay1, "GunFire");
			TNT1 A 7 {A_FireShotgun();A_Overlay(Lay2, "GunFlash");}
			TNT1 BC 5;
			TNT1 D 4;
			TNT1 CB 5;
			TNT1 A 3;
			TNT1 A 7 A_ReFire();
			Goto Ready;
		GunFire:
			SHTG A 1;
			SHTG A 1 A_OverlayPivot(Lay1, .5, .5);
			SHTG A 1 A_OverlayOffset(Lay1, 0, 1, WOF_ADD);
			SHTG A 1;//Shot
			SHTG A 1 {//Recoil
				Float Scal = CFRandom(.2, .3);
				Vector2 Ofst = (-CFRandom(2, 3), CFRandom(8, 15));
				Float Rotate = CRandomPick(0, CFRandom(.9, 1.5));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
			}
			SHTG A 1;
			SHTG AAA 1{//Recover
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .5;
				Player.GetPSprite(Lay1).Y *= .5;
				Player.GetPSprite(Lay1).Rotation *= .5;
			}
			SHTG A 1{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			SHTG C 1;//Raise
			SHTG CC 1 A_OverlayOffset(Lay1, -4, -6, WOF_ADD);
			SHTG DEFF 1 A_OverlayOffset(Lay1, -15, -7, WOF_ADD);
			#### F 1 A_OverlayOffset(Lay1, -3, -2, WOF_ADD);
			#### F 1 A_OverlayOffset(Lay1, 3, 8, WOF_ADD);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
			SHTG HH 1 A_OverlayOffset(Lay1, 5, 17, WOF_ADD);//Pump
			#### H 1 A_OverlayOffset(Lay1, 2, 4, WOF_ADD);
			SHTG GF 1 A_OverlayOffset(Lay1, -5, -20, WOF_ADD);
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			SHTG FF 1 A_OverlayOffset(Lay1, 1, -5, WOF_ADD);
			SHTG FEEDD 1 A_OverlayOffset(Lay1, 11, 6, WOF_ADD);//Lower
			SHTG CCC 1 A_OverlayOffset(Lay1, 3, 6, WOF_ADD);
			SHTG A 1{
				A_OverlayPivot(Lay1, .5, 0);
				Float Scal = CFRandom(.95, 1.1);
				A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, CFRandom(-4, 4), CFRandom(1, 6));
				A_OverlayRotate(Lay1, CFRandom(-.5, .5));
			}
			SHTG AA 1{
				Player.GetPSprite(Lay1).Scale = (1,1)+(Player.GetPSprite(Lay1).Scale-(1,1))*.4;
				Player.GetPSprite(Lay1).X *= .4;
				Player.GetPSprite(Lay1).Y *= .4;
				Player.GetPSprite(Lay1).Rotation *= .4;
			}
			SHTG A 4{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			Goto GunWait;
			
		GunFlash:
			SHTF A 1 BRIGHT {
				A_OverlayOffset(Lay2, Player.GetPSprite(Lay1).X, Player.GetPSprite(Lay1).Y);
				Player.GetPSprite(Lay1).Scale = Player.GetPSprite(Lay1).Scale;
				A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
				A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
				A_OverlayPivot(Lay2, .5, .5);
			}
			SHTF BA 1 BRIGHT;
			Stop;
		Flash:
			TNT1 A 4 A_Light1();
			TNT1 B 3 A_Light2();
			Goto LightDone;
	}
}
Class MRIntWeaps_Pistol: Pistol Replaces Pistol
{
	Default{
		Weapon.SlotNumber 2;
		Weapon.BobStyle "Smooth";
	}
	Const Lay1 = 2;
	Const Lay2 = PSP_FLASH+1;
	
	int BobState, IdleDelay;
	
	MRIntWeaps_SmokeContainer Smokes[50];
	
	Float Recoil;
	Override Void DoEffect()
	{
		if(Recoil>0){Recoil-=.5;Owner.A_SetPitch(Owner.Pitch+.5*MRIntW_RecoilAmount);}
		
		For(int i=0;i<Casings.Size();i++){
			if(Casings[i])DoCasing(i);
		}
	}
	
	Const CaseLife = 20;
	Bool Casings[50];
	Float CasingDir[50];
	Void DoCasing(int index)
	{
		int Lay = index+PSP_FLASH+10;
		Let PSP = Owner.Player.GetPSprite(Lay);
		int Age = PSP.Tics;
		if(Age<2)Return;
		
		if(PSP.Y>280+32){
			Owner.Player.SetPsprite(Lay, Null);
			Casings[index] = false;
			Return;
		}
		
		if(Age<CaseLife)PSP.bInterpolate = true;
		Double VelZ = (Age-(CaseLife-4))/2;
		VelZ /= CaseLife/2;
		
		Double VelMult = CFRandom(1, 2);
		
		if(Age<CaseLife-5)PSP.Y += Owner.Player.Cmd.Pitch*.005;
		PSP.Y += Owner.Vel.Z;
		PSP.Y -= VelZ*57*VelMult*Cos(Pitch);
		if(Age<CaseLife-5)PSP.X += Owner.Player.Cmd.Yaw*.005;
		PSP.X += 11*VelMult;
		PSP.Scale *= 1+.05*CasingDir[index];
		PSP.Rotation -= 15*VelMult;
		
		//Console.Printf("Casing "..CaseLife-Age..": "..PSP.Y);
	}
	
	States{
		SmokeLay:
			NSHS A 0{
				A_OverlayFlags(OverlayId(), PSPF_ADDBOB|PSPF_ADDWEAPON, false);
				A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE|PSPF_FORCESTYLE|PSPF_FORCEALPHA, True);
				A_OverlayRenderStyle(OverlayId(), MRIntW_Smoke?STYLE_TRANSLUCENT:STYLE_NONE);
				A_OverlayPivot(OverlayId(), .5, .5);
				Player.GetPSprite(OverlayId()).Alpha=CFRandom(.3, .5);
			}
			NSHS A 1{
				A_OverlayFlags(OverlayId(), PSPF_ALPHA|PSPF_RENDERSTYLE, True);
				A_OverlayRenderStyle(OverlayId(), MRIntW_Smoke?STYLE_TRANSLUCENT:STYLE_NONE);
			}
			NSHS AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1{
				int Index = abs(OverlayId())-10;
				A_OverlayFlags(OverlayId(), PSPF_INTERPOLATE, true);
				
				Player.GetPSprite(OverlayId()).Alpha-=.01;
				
				Float Scale = (CFRandom(.09, .13) + (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle))*.2);
				Scale -= (invoker.Smokes[Index].Vel.Y);
				Scale *= .1;
				A_OverlayScale(OverlayId(), Max(0, Scale), Max(0, Scale), WOF_ADD);
				
				if(Player.GetPSprite(OverlayId()).Scale.Length()>15)A_OverlayRenderStyle(OverlayId(), STYLE_NONE);
				Player.GetPSprite(OverlayId()).Y += Player.Cmd.Pitch*.02 + Max(0, (Vel.X*Cos(Angle) + Vel.Y*Sin(Angle))*.1) + Vel.Z;
				Player.GetPSprite(OverlayId()).Y -= invoker.Smokes[Index].Vel.Z*Cos(Pitch);
				Player.GetPSprite(OverlayId()).Y += invoker.Smokes[Index].Vel.Y*Sin(Pitch);
				Player.GetPSprite(OverlayId()).X += Player.Cmd.Yaw*.02 + (Vel.X*Cos(Angle+90) + Vel.Y*Sin(Angle+90)*5);
				Player.GetPSprite(OverlayId()).X += invoker.Smokes[index].Vel.X;
			}
			TNT1 A 0 {invoker.Smokes[abs(OverlayId())-10].Destroy();invoker.Smokes[abs(OverlayId())-10]=Null;}
			Stop;
			
		CasingLay:
			PISC A 0 {
				A_OverlayFlags(Overlayid(), PSPF_ADDWEAPON, false);
				Player.GetPSprite(OverlayId()).bInterpolate=false;
				A_OverlayPivot(OverlayId(), .5, .5);
				
				A_OverlayOffset(OverlayId(), 160, 130+32);
				A_OverlayScale(OverlayId(), .8, .8);
				A_OverlayRotate(OverlayId(), 140);
			}
			PISC A 20 A_SetTics(CaseLife);
			TNT1 A 0 {Player.GetPSprite(OverlayId()).bInterpolate=invoker.Casings[OverlayId()-10-PSP_FLASH]=false;}
			Stop;
		
		Select:
			TNT1 A 0 A_Overlay(Lay1, "GunRaise");
		Raise:
			#### A 1 A_Raise();
			Loop;
		Deselect:
			TNT1 A 0 A_Overlay(Lay1, "GunLower");
		Lower:
			#### A 1 A_Lower();
			Loop;
		
		GunRaise:
			TNT1 AAAA 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , false);
				if(MRIntW_LHand)A_OverlayFlags(Lay1, PSPF_MIRROR|PSPF_FLIP, true);//Left handed
				A_OverlayPivot(Lay1, .5, 1);
				A_OverlayOffset(Lay1, -28, 90);
				A_OverlayScale(Lay1, .8, .8);
				A_OverlayRotate(Lay1, 10.5);
			}
			P1SG A 1{if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("P2SGA0");}
			#### AAAAAAA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, 6, -10, WOF_ADD);
				A_OverlayScale(Lay1, .02, .02, WOF_ADD);
				A_OverlayRotate(Lay1, -2, WOF_ADD);
			}
			#### AAA 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -2, 2, WOF_ADD);
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, .5, WOF_ADD);
			}
			#### A 1 {
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON , true);
				A_OverlayOffset(Lay1, 0, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayRotate(Lay1, 0);
			}
		GunWait:
			P1SG A 1 {
				if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("P2SGA0");
				A_IdleAnimation(Lay1);
				if(MRIntW_LHand)A_OverlayFlags(Lay1, PSPF_MIRROR|PSPF_FLIP, true);
				else A_OverlayFlags(Lay1, PSPF_MIRROR|PSPF_FLIP, false);
			}
			#### # 0 A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
			#### # 0 A_JumpIf(invoker.IdleDelay>35 && abs(invoker.BobState)<2, "GunIdle1");
			Loop;
		GunLower:
			P1SG A 1 {
				if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("P2SGA0");
				if(MRIntW_LHand)A_OverlayFlags(Lay1, PSPF_MIRROR|PSPF_FLIP, true);
				A_OverlayFlags(Lay1, PSPF_ADDWEAPON, false);
				A_OverlayOffset(Lay1, 0, Player.GetPSprite(PSP_WEAPON).Y);
				A_OverlayRotate(Lay1, 0);
				A_OverlayScale(Lay1, 1, 1);
				A_OverlayPivot(Lay1, .5, 1);
			}
			#### ## 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -5, -5, WOF_ADD);
				A_OverlayRotate(Lay1, 2, WOF_ADD);
				A_OverlayScale(Lay1, -.025, -.025, WOF_ADD);
			}
			#### # 1 {
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, true);
				A_OverlayOffset(Lay1, -1, -1, WOF_ADD);
				A_OverlayScale(Lay1, -.015, -.015, WOF_ADD);
			}
			#### ########## 1 {
				A_OverlayOffset(Lay1, 10, 7, WOF_ADD);
				A_OverlayRotate(Lay1, 3, WOF_ADD);
			}
			Stop;
		GunIdle1:
			#### # 0 {
				A_OverlayPivot(Lay1, .5, 1);
				invoker.BobState = 0;
				invoker.IdleDelay = CRandom(-10, -3)*70;
			}
			#### # 0 A_JumpIf(CRandom(0, 255)<100, "GunIdle2");
			#### AAAA 1 {A_Overlayoffset(Lay1, -.15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.1, .05, WOF_ADD);A_OverlayRotate(Lay1, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, .1, .025, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_OverlayOffset(Lay1, .025, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_OverlayOffset(Lay1, -.05, -.1, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_OverlayOffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 2 {
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_Overlayoffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_SetTics(CRandom(1,2));
			}
			#### # 0 A_JumpIf(CRandom(0, 10)<4, "GunIdle2");
			#### # 0 A_JumpIf(CRandom(0, 40)==1, "GunIdle1");
			Goto GunWait;
		GunIdle2:
			#### A 1 {A_Overlayoffset(Lay1, .0, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .05, -.1, WOF_ADD);A_OverlayRotate(Lay1, .05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.025, .05, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.1, .025, WOF_ADD);A_OverlayRotate(Lay1, -.05, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### A 1 {A_Overlayoffset(Lay1, -.1, .0, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, -.15, -.025, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAA 1 {A_Overlayoffset(Lay1, -.15, -.1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AA 1 {A_Overlayoffset(Lay1, .1, .05, WOF_ADD);A_OverlayRotate(Lay1, .1, WOF_ADD); A_SetTics(CRandom(1,2));}
			#### AAAA 1 {A_Overlayoffset(Lay1, .15, .05, WOF_ADD);A_SetTics(CRandom(1,2));}
			Goto GunWait;
		
		Ready:
			TNT1 A 1 A_WeaponReady();
			Loop;
		
		Fire:
			TNT1 A 4 {A_Overlay(Lay1, "GunFire");if(MRIntW_InstantFire||MRIntW_FastPistol)A_SetTics(0);}
			TNT1 A 6 {
				A_FirePistol();
				A_Overlay(Lay2, "GunFlash");
				if(MRIntW_Recoil){invoker.Recoil+=2;A_SetPitch(Pitch-2*MRIntW_RecoilAmount);}//Recoil
			}
			TNT1 A 4;
			TNT1 A 4 {if(!MRIntW_InstantFire||MRIntW_FastPistol)A_SetTics(0);else if(Player.GetPSprite(Lay1).Tics<4)A_WeaponReady(WRF_NOFIRE);}
			TNT1 A 5 A_ReFire();
			Goto Ready;
			
		GunFire:
			P1SG A 0{
				if(MRIntW_LHand)A_OverlayFlags(Lay1, PSPF_MIRROR|PSPF_FLIP, true);
				A_OverlayPivot(Lay1, .5, .5);
				if(MRIntW_BrownGloves)Player.GetPSprite(Lay1).Sprite = GetSpriteIndex("P2SGA0");
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
			}
			#### # 0 A_JumpIf(MRIntW_InstantFire||MRIntW_FastPistol, 5);
			#### A 1;
			#### B 1;
			#### BB 1 A_OverlayOffset(Lay1, 0, -1, WOF_ADD);
			#### B 1;//Shot
			#### BB 1 {
				Float Scal = CFRandom(.05, .06);
				Vector2 Ofst = (CFRandom(.1, 1), CFRandom(5, 10));
				Float Rotate = -CRandomPick(0, CFRandom(0, 1));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				
				if(MRIntW_Smoke){
					int index;
					For(index=0;index<invoker.Smokes.Size();index++){
						if(!invoker.Smokes[index])Break;
					}
					if(index<invoker.Smokes.Size()){
						MRIntWeaps_SmokeContainer a = New('MRIntWeaps_SmokeContainer');
						a.Vel = (CFRandom(-.05, .05), -CFRandom(.1, .2), CFRandom(.7, 1.2));
						invoker.Smokes[index] = a;
						
						Vector2 Bob = PlayerPawn(Self).BobWeapon(35);
						Bob.Y = Clamp(Bob.Y, 0, 50);
						
						A_Overlay(-10-index, "SmokeLay");
						A_OverlayOffset(-10-index, 130+Bob.X, 100+Bob.Y);
						Player.GetPSprite(-10-index).Scale = (1,1)*CFRandom(.1, .15);
						A_OverlayAlpha(-10-index, CFRandom(.01, .08)*3);
					}
				}
			}
			#### C 1{
				Float Scal = CFRandom(.01, .03);
				Vector2 Ofst = (CFRandom(.1, 1), 0);
				Float Rotate = -CRandomPick(0, CFRandom(0, 1));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
				
				if(!MRIntW_Casings)Return;
				int index;
				For(index=0;index<invoker.Casings.Size();index++){
					if(!invoker.Casings[index]){invoker.Casings[index] = true;Break;}
				}
				
				if(index<invoker.Casings.Size()){
					A_Overlay(PSP_FLASH+10+index, "CasingLay");
					invoker.CasingDir[index] = CFRandom(-.7, 1.5);
				}
			}
			#### DEE 1{
				Float Scal = CFRandom(.01, .03);
				Vector2 Ofst = (CFRandom(.1, 1), 0);
				Float Rotate = -CRandomPick(0, CFRandom(0, 1));
				A_OverlayScale(Lay1, Scal, Scal, WOF_ADD);
				A_OverlayOffset(Lay1, Ofst.X, Ofst.Y, WOF_ADD);
				A_OverlayRotate(Lay1, Rotate, WOF_ADD);
				
				Player.GetPSprite(Lay2).Scale = Player.GetPSprite(Lay1).Scale;
				Player.GetPSprite(Lay2).Rotation = Player.GetPSprite(Lay1).Rotation;
				Player.GetPSprite(Lay2).X = Player.GetPSprite(Lay1).X;
				Player.GetPSprite(Lay2).Y = Player.GetPSprite(Lay1).Y;
			}
			#### EDB 1{
				A_OverlayFlags(Lay1, PSPF_INTERPOLATE, false);
				Player.GetPSprite(Lay1).Scale.X -= Min(.05, Max(0, Player.GetPSprite(Lay1).Scale.X-1));
				Player.GetPSprite(Lay1).Scale.Y = Player.GetPSprite(Lay1).Scale.X;
				Player.GetPSprite(Lay1).X *= .4;
				Player.GetPSprite(Lay1).Y *= .4;
				Player.GetPSprite(Lay1).Rotation *= .4;
			}
			#### A 1{
				Float Scal = CFRandom(.9, 1.05);
				A_OverlayScale(Lay1, Scal, Scal, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, CFRandom(-2, 2), CRandom(-1, 4));
				A_OverlayRotate(Lay1, CFRandom(-.5, .5));
			}
			#### AA 1{
				Player.GetPSprite(Lay1).Scale = (1,1)+(Player.GetPSprite(Lay1).Scale-(1,1))*.4;
				Player.GetPSprite(Lay1).X *= .4;
				Player.GetPSprite(Lay1).Y *= .4;
				Player.GetPSprite(Lay1).Rotation *= .4;
			}
			#### A 2{
				A_OverlayScale(Lay1, 1, 1, WOF_INTERPOLATE);
				A_OverlayOffset(Lay1, 0, 0, WOF_INTERPOLATE);
				A_OverlayRotate(Lay1, 0, WOF_INTERPOLATE);
			}
			Goto GunWait;
		GunFlash:
			P1SF A 1 BRIGHT {
				A_OverlayOffset(Lay2, Player.GetPSprite(Lay1).X, Player.GetPSprite(Lay1).Y);
				Player.GetPSprite(Lay1).Scale = Player.GetPSprite(Lay1).Scale;
				A_OverlayFlags(Lay2, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
				if(MRIntW_LHand)A_OverlayFlags(Lay2, PSPF_MIRROR|PSPF_FLIP, true);
				A_OverlayRenderStyle(Lay2, STYLE_ColorAdd);
				A_OverlayPivot(Lay2, .5, .5);
			}
			P1SF BA 1 BRIGHT;
			Stop;
		
		Flash:
			TNT1 A 7 A_Light1();
			Goto LightDone;
			TNT1 A 7 A_Light1();
			Goto LightDone;
		
		Sprites:
			P2SG ABCDE 0;
			Stop;
	}
	
	Action Void A_IdleAnimation(int Lay = 2)//Idle hand bobbing
	{
		Bool Bers = MRIntW_BersShake>1 && FindInventory("PowerStrength");
		Float Mult = (Bers?2:1);
		if(invoker.BobState>=0){
			A_OverlayOffset(Lay, CFRandom(-.005, .015)*Mult, CFRandom(.01, .02)*Mult, WOF_ADD);
			if(invoker.BobState>90||Player.GetPSprite(Lay).Y>1.35){invoker.BobState = -invoker.BobState;}
			else invoker.BobState+=Mult;
		}
		else {
			A_OverlayOffset(Lay, -CFRandom(-.005, .015)*Mult, -CFRandom(.01, .02)*Mult, WOF_ADD);
			if(Player.GetPSprite(Lay).Y<0){A_OverlayOffset(Lay, 0, 0, WOF_INTERPOLATE);invoker.BobState = 0;}
			else if(!(invoker.BobState>=-1&&Player.GetPSprite(Lay).Y>0))invoker.BobState+=Mult;
		}
		if(Bers && GetAge()%2==0){//Shaking hand if got berserk
			A_OverlayOffset(Lay, CFRandom(-.25, .25), 0, WOF_INTERPOLATE|WOF_KEEPY);
			Player.GetPSprite(Lay).Y += CFRandom(-.25, .25);
			if(Player.GetPSprite(Lay).Y<0){Player.GetPSprite(Lay).Y = 0;invoker.BobState = 0;}
			if(Player.GetPSprite(Lay).Y>1.35){Player.GetPSprite(Lay).Y = 1.35;invoker.BobState = -90;}
		}
		
		if(MRIntW_IdleAnims)invoker.IdleDelay++;
	}
}